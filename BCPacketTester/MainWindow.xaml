<Window x:Class="BCPacketTester.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BCPacketTester"
        mc:Ignorable="d"
        Title="BC Packet Tester" Height="400" Width="400" ResizeMode="CanMinimize" Icon="/Icon1.ico">
    <Window.Resources>
        <!--
            This styles the Send Button
        -->
        <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Margin" Value="90,0,0,10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="FontSize" Value="26"/>
                                <Setter Property="Margin" Value="89,0,0,9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="FontSize" Value="24"/>
                                <Setter Property="Margin" Value="90,0,0,10"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
            This styles the Delete Button
        -->
        <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="0,5,1,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Margin" Value="0,4,0,0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="Margin" Value="0,5,1,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 
            This styles the Settings List
        -->
        <Style x:Key="SettingsListItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="8,5,5,5"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="0,2,0,0"/>
            <Setter Property="BorderThickness" Value="3,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#272727"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Gray"/>
                                <Setter Property="BorderThickness" TargetName="Bd" Value="3,0,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#383838"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                                <Setter Property="BorderThickness" TargetName="Bd" Value="3,0,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#383838"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                                <Setter Property="BorderThickness" TargetName="Bd" Value="3,0,0,0"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Brushes used in Styling of ScrollViewer -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="Black" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="Black" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Black" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
                             StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Black" Offset="0.0" />
                    <GradientStop Color="Black" Offset="0.6" />
                    <GradientStop Color="Black" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush"
                             StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Black" Offset="0.0"/>
                    <GradientStop Color="Black" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <LinearGradientBrush x:Key="PressedBrush"
                             StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Black" Offset="0.0"/>
                    <GradientStop Color="Black" Offset="0.1"/>
                    <GradientStop Color="Black" Offset="0.9"/>
                    <GradientStop Color="Black" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="0" CornerRadius="0" Height="10"
                                Background="{StaticResource NormalBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}"
                                BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="{StaticResource GlyphBrush}"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid Width="10">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="0" Background="#1E1E1E" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}"
                              Height="18" Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"
                               Background="{StaticResource HorizontalNormalBrush}"
                               BorderBrush="{StaticResource HorizontalNormalBorderBrush}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}"
                              Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="0" Background="Black"/>
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"
                              Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z"/>
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"
                               Background="Black" BorderBrush="{StaticResource NormalBorderBrush}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18"
                              Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall ScrollViewer -->
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#000000">
        <Button x:Name="SendButton" HorizontalAlignment="Left" VerticalAlignment="Bottom" Background="Transparent" Click="SendButton_Click"
                Style="{DynamicResource SendButtonStyle}" BorderBrush="Transparent" Panel.ZIndex="20">
            <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE724;" Foreground="White"
                       TextOptions.TextRenderingMode="Grayscale" RenderOptions.BitmapScalingMode="HighQuality"/>
        </Button>
        <ProgressBar VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="90,0,0,22" IsIndeterminate="True" Width="30"
                     Height="4" Foreground="White" Background="Transparent" BorderBrush="Transparent" Panel.ZIndex="18"
                     x:Name="SendingProgress" Visibility="Collapsed"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0">
            <ListView x:Name="SettingsList" Margin="0,0,0,0" HorizontalAlignment="Left" Background="Transparent" VerticalAlignment="Center" 
                      SelectionChanged="SettingsList_SelectionChanged" ItemContainerStyle="{DynamicResource SettingsListItemStyle}" 
                      BorderBrush="Transparent" SelectedIndex="0">
                <ListViewItem x:Name="PacketButton" Background="Transparent" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderBrush="Transparent">
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE9E9;" Foreground="White"
                                       TextOptions.TextRenderingMode="Grayscale" RenderOptions.BitmapScalingMode="HighQuality"/>
                </ListViewItem>
                <ListViewItem x:Name="ServerButton" Background="Transparent" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderBrush="Transparent">
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE968;" Foreground="White"
                                       TextOptions.TextRenderingMode="Grayscale" RenderOptions.BitmapScalingMode="HighQuality"/>
                </ListViewItem>
            </ListView>
            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PacketStack" Visibility="Visible">
                <StackPanel Margin="0,0,0,0">
                    <TextBlock HorizontalAlignment="Left"  Text="Packet ID:" Foreground="White" FontSize="18" Margin="10,5,10,0"/>
                    <TextBox Text="11111" HorizontalAlignment="Left" x:Name="PacketIDBox" Background="Black" Foreground="White"
                             Width="120" Margin="10,5,10,0" FontSize="16" TextChanged="PacketIDBox_TextChanged"/>
                    <TextBlock HorizontalAlignment="Left" Text="Channel ID:" Foreground="White" FontSize="18" Margin="10,10,10,0"/>
                    <TextBox Text="282828" HorizontalAlignment="Left" x:Name="ChannelIDBox" Background="Black" Foreground="White" 
                             Width="120" Margin="10,5,10,0" FontSize="16" TextChanged="ChannelIDBox_TextChanged"/>
                    <TextBlock HorizontalAlignment="Left" Text="Request Type:" Foreground="White" FontSize="18" Margin="10,10,10,0"/>
                    <TextBox Text="2" HorizontalAlignment="Left" x:Name="RequestTypeBox" Background="Black" Foreground="White" 
                             Width="120" Margin="10,5,10,0" FontSize="16" TextChanged="RequestTypeBox_TextChanged"/>
                    <TextBlock HorizontalAlignment="Left" Text="Auth Key:" Foreground="White" FontSize="18" Margin="10,10,10,0"/>
                    <TextBox Text="TestAuth" HorizontalAlignment="Left" x:Name="AuthKeyBox" Background="Black" Foreground="White" 
                             Width="120" Margin="10,5,10,0" FontSize="16" TextChanged="AuthKeyBox_TextChanged"/>
                    <TextBlock HorizontalAlignment="Left" Text="Request Body:" Foreground="White" FontSize="18" Margin="10,10,10,0"/>
                    <TextBox HorizontalAlignment="Left" x:Name="RequestBodyBox" Background="Black" Foreground="White" 
                             Width="120" Margin="10,5,10,0" FontSize="16" AcceptsReturn="True" TextChanged="RequestBodyBox_TextChanged"/>
                </StackPanel>
            </ScrollViewer>


            <StackPanel x:Name="ServerStack" Visibility="Collapsed">
                <TextBlock HorizontalAlignment="Left" Text="Server IP:" Foreground="White" FontSize="18" Margin="10,5,10,0"/>
                <TextBox Text="127.0.0.1" HorizontalAlignment="Left" x:Name="ServerIpBox" Background="Black" Foreground="White" 
                         Width="120" Margin="10,5,10,0" FontSize="16" TextChanged="ServerIpBox_TextChanged"/>
                <TextBlock HorizontalAlignment="Left" Text="Server Port:" Foreground="White" FontSize="18" Margin="10,10,10,0"/>
                <TextBox Text="3090" HorizontalAlignment="Left" x:Name="ServerPortBox" Background="Black" Foreground="White" 
                         Width="120" Margin="10,5,10,0" FontSize="16" TextChanged="ServerPortBox_TextChanged"/>
            </StackPanel>

            <Grid Width="190">
                <Button x:Name="ClearButton" HorizontalAlignment="Right" VerticalAlignment="Top" Background="Transparent" Click="ClearButton_Click"
                Style="{DynamicResource DeleteButtonStyle}" BorderBrush="Transparent" Panel.ZIndex="20" Visibility="Collapsed">
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xED60;" Foreground="White"
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                </Button>
                <TextBlock Text="Responses:" VerticalAlignment="Top" HorizontalAlignment="Left"
                           Foreground="White" FontSize="18" Margin="10,5,10,5"/>
                <ListView Background="Transparent" BorderBrush="Transparent" x:Name="ResponseList" Margin="0,25,0,0" Width="185"
                          SelectionChanged="ResponseList_SelectionChanged" ItemContainerStyle="{DynamicResource SettingsListItemStyle}">
                    <ListView.Template>
                        <ControlTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListView.Template>
                </ListView>
                <!--<TextBox x:Name="DebugConsole" Background="Transparent" Foreground="White" BorderThickness="0" FontSize="16"
                              AcceptsReturn="True" TextWrapping="Wrap" Text="ID: 2992" Margin="10" IsReadOnly="True" Width="120"/>-->
            </Grid>
        </StackPanel>
    </Grid>
</Window>
